{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "mcp__ide__getDiagnostics",
      "Bash(npm run lint)",
      "Bash(npx tsc:*)",
      "Bash(npx next lint:*)",
      "Bash(pnpm install:*)",
      "Bash(rm:*)",
      "WebFetch(domain:vercel.com)",
      "WebFetch(domain:stripe.com)",
      "WebFetch(domain:github.com)",
      "Bash(npm run dev:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(curl:*)",
      "Bash(start http://localhost:3002)",
      "Bash(cmd /c start:*)",
      "Bash(find:*)",
      "Bash(npm run build:*)",
      "Bash(timeout 10 npm run dev)",
      "Bash(timeout 5 npm run dev)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(git checkout:*)",
      "Bash(del:*)",
      "Bash(start http://localhost:3000)",
      "Bash(cmd /c:*)",
      "WebFetch(domain:www.eryph.io)",
      "Bash(powershell:*)",
      "Bash(taskkill:*)",
      "Bash(start /B npm run dev)",
      "Bash(pnpm add:*)",
      "Bash(npm run links:validate-internal:*)",
      "Bash(npm run links:check-href:*)",
      "Bash(npm run links:audit:*)",
      "Bash(tsx scripts/check-missing-pages.ts:*)",
      "Bash(npx tsx:*)",
      "Bash(npx ts-node:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:api.github.com)",
      "Bash(start http://localhost:3000/solutions/dev-test)",
      "Bash(node:*)",
      "Bash(start http://localhost:3000/platform/sdks)",
      "Bash(start http://localhost:3000/for-devops)",
      "Bash(npm run lint:*)",
      "Bash(start http://localhost:3001)",
      "Bash(rd:*)",
      "Bash(start http://localhost:3000/fix-slow-vm-provisioning)",
      "Bash(start http://localhost:3003/resources/numbers)",
      "Bash(start http://localhost:3004/resources/numbers)",
      "Bash(start http://localhost:3000/get-started)",
      "Bash(start http://localhost:3002/resources/numbers)",
      "Bash(tsx scripts/fix-direct-links.ts:*)",
      "mcp__ide__executeCode",
      "Bash(start http://localhost:3000/get-started/quickstart)",
      "Bash(echo $PPID)",
      "Bash(start http://localhost:3001/get-started)",
      "Bash(start http://localhost:3000/vmware-alternatives)",
      "Bash(git log:*)",
      "WebFetch(domain:morpheusdata.com)",
      "WebFetch(domain:cloudchipr.com)",
      "Bash(timeout 15 npm run dev)",
      "Bash(pnpm list:*)",
      "Bash(start http://localhost:3001/test-catlet-diagram)",
      "Bash(npx playwright install:*)",
      "Bash(cp:*)",
      "Bash(pnpm run:*)",
      "Bash(move:*)",
      "Bash(timeout 15 pnpm run dev)",
      "Bash(start /B pnpm run dev)",
      "Bash(npx next:*)",
      "Bash(timeout 10 pnpm run dev)",
      "Bash(timeout 30 npm run build)",
      "Bash(tsx scripts/test-consistency-system.ts:*)",
      "Bash(npx playwright test:*)",
      "Bash(npm run test:ui-fast:*)",
      "Bash(npm run fix:consistency-preview:*)",
      "Bash(npm run fix:consistency-ai:*)",
      "Bash(pnpm test:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(cat:*)",
      "Bash(start http://localhost:3000/platform)",
      "Bash(wc:*)",
      "Bash(timeout 30 pnpm run build)",
      "Bash(start http://localhost:3001/vm-template-version-control)",
      "Bash(start http://localhost:3000/vm-template-version-control)",
      "Bash(set UI_TEST_ROUTES=\"/\")",
      "Bash(npm run link-check:*)",
      "Bash(timeout 30 pnpm run dev)",
      "Bash(set ANALYZE=true)",
      "WebFetch(domain:playwright.dev)",
      "WebFetch(domain:testing-library.com)",
      "Bash(start http://localhost:3000/test-panel-options)",
      "Bash(npx jest:*)",
      "Bash(npx playwright:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:docs.eryph.io)",
      "Bash(where ssh)",
      "Bash(C:\\Windows\\System32\\OpenSSH\\ssh.exe -o StrictHostKeyChecking=no admin@10.249.250.64 \"echo ''SSH test successful''\")",
      "Bash(\"C:/Windows/System32/OpenSSH/ssh.exe\" -o StrictHostKeyChecking=no admin@10.249.250.64 \"echo SSH test successful\")",
      "Bash(where sshpass)",
      "Bash(\"C:/Windows/System32/OpenSSH/ssh.exe\" -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no admin@10.249.250.65 \"echo ''SSH test successful''\")",
      "Bash(\"C:/Windows/System32/OpenSSH/ssh.exe\" -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no admin@10.249.250.65 \"cloud-init status\")",
      "Bash(\"C:/Windows/System32/OpenSSH/ssh.exe\" -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no admin@10.249.250.65 \"uname -a && lsb_release -d\")",
      "Bash(start http://localhost:3456/solutions/software)",
      "Bash(ssh-keygen:*)",
      "WebFetch(domain:genepool.eryph.io)",
      "Bash(eryph-packer:*)",
      "Bash(Remove-Item -Path D:SourceReposeryphcoming-soontest-genes-tutorial -Recurse -Force)",
      "Bash(npx eslint:*)",
      "WebFetch(domain:genepool-api.eryph.io)",
      "WebFetch(domain:nextjs.org)",
      "Bash(Get-Help Test-Catlet -Detailed)",
      "Bash(turbo:*)",
      "Bash(dir:*)",
      "Bash(where:*)",
      "Bash(egs-tool.exe get-ssh-key:*)",
      "Bash(egs-tool.exe update-ssh-config:*)",
      "Bash(egs-tool.exe get-status:*)",
      "Bash(\"C:\\Windows\\System32\\OpenSSH\\ssh.exe\" 72a69558-798e-4129-aaa5-51be3e3ec721.eryph.alt -C hostname)",
      "Bash(\"C:\\Windows\\System32\\OpenSSH\\ssh.exe\" 933df39b-c388-494b-b2fb-b66f7451f2b5.eryph.alt -C hostname)",
      "Bash(\"C:\\Windows\\System32\\OpenSSH\\ssh.exe\" 49e2c4d5-49d8-4e6e-9568-1c1d4427a7fc.eryph.alt -C hostname)",
      "Bash(ssh:*)",
      "Bash(C:WindowsSystem32OpenSSHssh.exe -v 52a98da7-2680-4b8f-9f0f-e38bee102b5c.eryph.alt hostname)",
      "Bash(C:\\Windows\\System32\\OpenSSH\\ssh.exe 52a98da7-2680-4b8f-9f0f-e38bee102b5c.eryph.alt hostname)",
      "Bash(\"C:/Windows/System32/OpenSSH/ssh.exe\" 52a98da7-2680-4b8f-9f0f-e38bee102b5c.eryph.alt hostname)",
      "Bash(echo $PATH)",
      "Bash(echo $SHELL)",
      "WebSearch",
      "Bash(\"C:/Windows/System32/OpenSSH/ssh.exe\" test-vscode-win10-simple.eryph.alt hostname)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  },
  "filesystem": {
    "restrict": false
  }
}