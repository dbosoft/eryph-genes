name: test-iis
parent: dbosoft/winsrv2022-standard/latest
cpu: 4
memory: 4096

# Variables for customization
variables:
- name: site_name
  value: TestSite
- name: site_port
  value: 8080
- name: site_path
  value: C:\inetpub\testsite

fodder:
- name: iis-setup
  type: shellscript
  filename: setup.ps1
  content: |
    # Install IIS and common features
    Write-Host "Installing IIS Web Server..."
    Install-WindowsFeature -Name Web-Server -IncludeManagementTools
    Install-WindowsFeature -Name Web-Common-Http, Web-Static-Content
    Install-WindowsFeature -Name Web-Net-Ext45, Web-Asp-Net45
    Install-WindowsFeature -Name Web-ISAPI-Ext, Web-ISAPI-Filter
    
    # Create site directory
    Write-Host "Creating site directory: {{ site_path }}"
    New-Item -Path "{{ site_path }}" -ItemType Directory -Force
    
    # Create a simple index.html
    $htmlContent = "<h1>IIS is Working!</h1><p>Site: {{ site_name }}</p><p>Port: {{ site_port }}</p><p>Path: {{ site_path }}</p><p>Server: $env:COMPUTERNAME</p><p>Generated: $(Get-Date)</p>"
    $htmlContent | Out-File "{{ site_path }}\index.html" -Encoding UTF8
    
    # Configure IIS site
    Write-Host "Configuring IIS site: {{ site_name }} on port {{ site_port }}"
    Import-Module WebAdministration
    
    # Remove default website if it exists
    if (Get-Website -Name "Default Web Site" -ErrorAction SilentlyContinue) {
        Remove-Website -Name "Default Web Site"
    }
    
    # Create new website
    New-Website -Name "{{ site_name }}" -Port {{ site_port }} -PhysicalPath "{{ site_path }}"
    
    # Start the website
    Start-Website -Name "{{ site_name }}"
    
    # Configure firewall
    Write-Host "Configuring Windows Firewall for port {{ site_port }}"
    New-NetFirewallRule -DisplayName "IIS {{ site_name }}" -Direction Inbound -Protocol TCP -LocalPort {{ site_port }} -Action Allow
    
    # Verify installation
    Write-Host "IIS installation complete!"
    Write-Host "Site: {{ site_name }}"
    Write-Host "URL: http://localhost:{{ site_port }}"
    
    # Test the site is working
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:{{ site_port }}" -UseBasicParsing
        Write-Host "✓ Site is responding with status: $($response.StatusCode)"
    } catch {
        Write-Warning "⚠ Site test failed: $($_.Exception.Message)"
    }
    
    # Show IIS status
    Get-Website | Format-Table Name, State, Port, PhysicalPath -AutoSize